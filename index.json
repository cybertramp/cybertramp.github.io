[
{
	"uri": "https://cybertramp.net/profile/",
	"title": "/profile",
	"tags": null,
	"description": "About me",
	"content": " Hi! My name is Cybertramp.\n(paran_son(at)outlook.com) 📣 Current working as SW Engineer in FADU ssd company. \n👨‍💻 Career  2019.12~ Working at FADU. 2019.06~2019.07 Working as an intern at Digicap. 2018.07~2018.08 Working as an intern at ZEPL. 2018.06~2019.02 Worked at Sangmyung University P.E.L Lab. 2017.02~2017.10 Worked at SMsolutions.  📚 Education  2020.02 Graduated from Sangmyung University.  💽 Projects  ing\u0026hellip;  게임 유저 평가 사이트 개발 중(Go, MariaDB, Vue3)   Toy  개인 NAS 구축(promox, openNAS, gitea \u0026hellip;) php-richtext-editor 구현 블로그 서비스 DAMONOTE 개발.. 중 중단   FADU  JBOF 환경에서 다중 제어 툴 개발(C#) 양산 시퀸스 구축 양산 배포 서비스 구축(with dotnet, Vue2, mongoDB) 팀내 사내 장비를 위한 log parser 툴 개발(with PyQT) 팀내 gitlab CI/CD 환경 구축(yaml, linux) 팀내 검증 Test Case 구현(CPP) 팀내 사내 장비를 위한 monitoring 개발(with Go, Vue3)   Univ  openCV를 활용한 faceswap 구현 IoT 멀티탭 WiTab 개발(Flask, Raspberry PI) Penguin adventure(js, HTML5) BioRythm(MATLAB)   Digicap  openssl 라이브러리를 활용한 playOpenssl   P.E.L Lab  메시지 브로커 RabbitMQ 소프트웨어의 취약점 분석 기법 적용 연구 ASLR 기반 클라우드 하이퍼바이저 침해 대응기술 연구 블록체인 기반 신뢰 데이터 공유 시스템 개발   ZEPL  TensorFlow를 활용한 간단한 이미지 자동차 있는지 확인 프로젝트    🎫 Certificate  PC 정비사 ITQ 리눅스 마스터 네트워크 관리사 Redhat RHCSA 정보처리기사  "
},
{
	"uri": "https://cybertramp.net/posts/20210116_001/",
	"title": "빌드가 안될때 해결법",
	"tags": null,
	"description": "",
	"content": "PyQT5 빌드가 안될때 해결하는 방법이다. 빌드시 상대 경로가 문제인 경우에서의 해결 방법.\n3699 WARNING: lib not found: api-ms-win-core-libraryloader-l1-2-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3704 WARNING: lib not found: api-ms-win-core-processthreads-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3706 WARNING: lib not found: api-ms-win-core-util-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3708 WARNING: lib not found: api-ms-win-core-errorhandling-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3712 WARNING: lib not found: api-ms-win-core-sysinfo-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3715 WARNING: lib not found: api-ms-win-core-interlocked-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3718 WARNING: lib not found: api-ms-win-core-winrt-string-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3720 WARNING: lib not found: api-ms-win-core-winrt-error-l1-1-1.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3723 WARNING: lib not found: api-ms-win-core-profile-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3725 WARNING: lib not found: api-ms-win-core-rtlsupport-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3732 WARNING: lib not found: api-ms-win-core-com-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3734 WARNING: lib not found: api-ms-win-core-processthreads-l1-1-1.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3736 WARNING: lib not found: api-ms-win-core-synch-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3738 WARNING: lib not found: api-ms-win-core-winrt-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3740 WARNING: lib not found: api-ms-win-core-winrt-error-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3742 WARNING: lib not found: api-ms-win-core-debug-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python.exe 3771 WARNING: lib not found: api-ms-win-core-path-l1-1-0.dll dependency of C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.2288.0_x64__qbz5n2kfra8p0\\python39.dll 위와 같은 Warning 메시지가 뜨고 실행 파일이 실행되지 않는다면 다음과 같이 조치하면 된다.\n  Windows 설정에서 앱 실행 별칭에서 Python 관련된 것을 모두 해제하고 하나 하나 올려보며 확인한다.\n  그래도 안되면 PyQT5를 그냥 재설치 해주면된다.\npip install pyqt5\n  아래의 글들이 도움되었다.\n 윈도우10 에서 파이썬 사용시 경로가 꼬이는 경우 — 내 저장소 (tistory.com) pyinstaller 사용 시 WARNING lib not found api-ms-win 과 같은 에러가 발생하는 경우 · Tonic (jwgo.kr)  "
},
{
	"uri": "https://cybertramp.net/",
	"title": "",
	"tags": null,
	"description": "",
	"content": "Hi! This site is cybertramp\u0026#39;s private space. 😁 I like anything computer-related. If you would like to visit the blog you used before, please refer to the address below. cybertramp.tistory.com Thanks!  "
},
{
	"uri": "https://cybertramp.net/categories/",
	"title": "Categories",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/",
	"title": "Posts",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20220203_001/",
	"title": "WezTerm Configure",
	"tags": null,
	"description": "",
	"content": "Wez\u0026rsquo;s Terminal Emulator의 Config file 이다.\nlua 언어로 되어 있으며, 윈도우에서의 설정 파일 기본 위치는 C:\\Program Files\\WezTerm\\wezterm.lua 이다.\n설정 파일 참고: [참고](Lua Reference - Wez\u0026rsquo;s Terminal Emulator (wezfurlong.org))\n아래는 내가 사용하는 Config 파일이다. (20220203 기준)\nlocal wezterm = require \u0026#39;wezterm\u0026#39;; return { default_prog = {\u0026#34;C:\\\\Windows\\\\system32\\\\wsl.exe\u0026#34;, \u0026#34;-d\u0026#34;, \u0026#34;Ubuntu-20.04\u0026#34;}, font = wezterm.font(\u0026#34;D2Coding\u0026#34;), font_size = 10.0, color_scheme = \u0026#34;Dracula\u0026#34;, launch_menu = { { label = \u0026#34;Debugging PC\u0026#34;, args = {\u0026#34;ssh\u0026#34;,\u0026#34;root@10.10.13.22\u0026#34;} }, { label = \u0026#34;DQ Server\u0026#34;, args = {\u0026#34;ssh\u0026#34;,\u0026#34;root@10.10.13.21\u0026#34;} }, { label = \u0026#34;PowerShell\u0026#34;, args = {\u0026#34;C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\u0026#34;,\u0026#34;-nologo\u0026#34;} } }, keys = { {key=\u0026#34;F1\u0026#34;, mods=\u0026#34;\u0026#34;, action=\u0026#34;ShowLauncher\u0026#34;}, }, hyperlink_rules = { -- Linkify things that look like URLs -- This is actually the default if you don\u0026#39;t specify any hyperlink_rules { regex = \u0026#34;\\\\b\\\\w+://(?:[\\\\w.-]+)\\\\.[a-z]{2,15}\\\\S*\\\\b\u0026#34;, format = \u0026#34;$0\u0026#34;, }, -- file:// URI { regex = \u0026#34;\\\\bfile://\\\\S*\\\\b\u0026#34;, format = \u0026#34;$0\u0026#34;, } } } "
},
{
	"uri": "https://cybertramp.net/categories/windows/",
	"title": "windows",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/categories/golang/",
	"title": "golang",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20220119_001/",
	"title": "GoLang 설치",
	"tags": null,
	"description": "",
	"content": "Version: 1.17.6을 설치하는 방법이다.\n  다운 및 설치\n# wget sudo -i mkdir go; cd go wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz exit go version   프로젝트 생성 \u0026amp; 셋업\ncd {project dict} go mod init {package name} go mod tidy go build   Compile\nGOOS=linux GOARCH=amd64 go build -v xxxx.go GOOS=windows GOARCH=amd64 go build -v xxxx.go    "
},
{
	"uri": "https://cybertramp.net/categories/linux/",
	"title": "linux",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20211107_001/",
	"title": "해결하기 - too many open files; retrying in 1s",
	"tags": null,
	"description": "",
	"content": "Go로 http 라이브러리를 사용하여 API 서버를 만들었으나, 테스트로 1일 동안 여러 장비에서 API를 주고 받았는데, 문제가 생겨있었다.\n2021/10/30 04:26:49 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:50 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:51 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:52 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:53 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:54 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:55 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 2021/10/30 04:26:56 http: Accept error: accept tcp [::]:4547: accept4: too many open files; retrying in 1s 파일을 너무 많이 열어서 문제가 생긴건데, 원인이 뭔지 몰랐다. 아마 각 장비에서 날아오는 요청이 닫히지 않고 계속 열려서 문제가 생긴듯 했다.\n리눅스에 열수 있는 파일 개수 제한은 분명 무제한이 되어 있으나, 아마 메모리나 용량을 넘어서 발생한게 아닐까 생각이 들었다.\n[opc@dq-mon dq_mon]$ free total used free shared buff/cache available Mem: 823260 182832 252828 10848 387600 623816 Swap: 8388604 0 8388604 [opc@dq-mon dq_mon]$ df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 357M 0 357M 0% /dev tmpfs 402M 0 402M 0% /dev/shm tmpfs 402M 11M 392M 3% /run tmpfs 402M 0 402M 0% /sys/fs/cgroup /dev/mapper/centosvolume-root 40G 11G 29G 28% / /dev/sda2 1014M 557M 458M 55% /boot /dev/sda1 100M 7.3M 93M 8% /boot/efi tmpfs 81M 0 81M 0% /run/user/987 tmpfs 81M 0 81M 0% /run/user/1000 [opc@dq-mon dq_mon]$ ulimit unlimited 이 문제는 확인해보니 클라이언트 측에서 Close를 해주지 않아 발생한 문제이다. Client 측에 다음과 같이 적용하였더니 lsof | wc -l에서 값이 증가하지 않는 것을 확인하였다.\nresp, _ := http.Post(url, \u0026#34;application/json\u0026#34;, buff) resp.Body.Close() http에서는 3 Way Hand shaking을 하고 서로 연결을 하는데, HTTP/1.1 부터 Keep Alive라는 기능을 통해 Hand shaking을 건너띄는 것이 있다. 이로 인해 발생하는 것으로 보인다.\n사용중 다시 문제가 있었다. 서버가 꺼져있는 경우 Service가 정상적으로 동작하지 않으며, Fail로 꺼져버리는 문제가 확인됬다.\nGolang - http.Client에는 Timeout이 들어가야 한다. (tistory.com)\nGolang의 Http 패키지 잘 사용하기. 최근에 서비스에 http 호출 클라이언트를 개발하며 net/http… | by Daniel | 센트비 기술 블로그 | Medium\nHTTP request timeouts in Go for beginners | by Aditya pratap singh | ITNEXT\n여러 링크들을 참조했지만 딱히 별 효과는 없었다.\n2주나 삽질을 했지만 찾지 못했다가 드디어 방법을 찾았다.\n참조: go http requests in loop - Stack Overflow\n세가지가 문제였던것 같다.\n 내가 log.Fatal() 함수를 사용한 점  이 함수는 에러 로그를 출력하고 프로그램을 완전히 종료한다\u0026hellip; 그래서 계속 꺼졌던 것이다.\n  defer res.Body.Close를 사용하여 서비스가 꺼지게 한 점  defer는 보통 함수가 끝나면 동작하는 것으로 알고 있다. 여기서 말하기를 body는 읽을때 마다 닫아야하기 때문에 잘못 되었다고 한다.\n  go routin으로 사용안한 점  이건 책을 좀 찾아봐야했다.\n  goroutine  Go에서 동시에 실행할 수 있는 Go 만의 최소 실행단위를 말한다. 호출할 함수 앞에 go 키워드를 붙이면, 그 함수는 즉시 return 하고 실제 동작은 background에서 Go 루틴 형태로 실행하면서 원래 수행하던 프로그램 흐름은 계속 진행된다. Go 자체의 스케쥴러에 의해 제어 된다. 따라서 실행 순서는 예측할 수 없다. 실행 사이즈: 프로세스 \u0026gt; Go 루틴 \u0026gt; 쓰레드      자세한 사항은 내가 좀 더 공부를 해야겠지만 잘 해결되었다.\n "
},
{
	"uri": "https://cybertramp.net/posts/20210822_001/",
	"title": "Build - nvme-cli",
	"tags": null,
	"description": "",
	"content": "1. 클론/컴파일/설치 git clone https://github.com/linux-nvme/nvme-cli.git cd nvme-cli make make install # RUN nvme --version 2. 커스텀 플러그인 추가 플러그인은 todd라는 명으로 추가한다.\nmkdir -p plugins/todd   plugins/todd/todd-nvme.h\n#undef CMD_INC_FILE #define CMD_INC_FILE plugins/todd/todd-nvme  #if !defined(TODD_NVME) || defined(CMD_HEADER_MULTI_READ) #define TODD_NVME  #include \u0026#34;cmd.h\u0026#34;#include \u0026lt;stdio.h\u0026gt; PLUGIN(NAME(\u0026#34;todd\u0026#34;, \u0026#34;Todd plugin\u0026#34;), COMMAND_LIST( ENTRY(\u0026#34;list\u0026#34;,\u0026#34;List available FADU devices\u0026#34;,todd_list) ) ); #endif  #include \u0026#34;define_cmd.h\u0026#34;  plugins/todd/todd-nvme.c\n#include \u0026#34;nvme.h\u0026#34; #define CREATE_CMD #include \u0026#34;todd-nvme.h\u0026#34; static int todd_list(int argc, char **argv, struct command *cmd, struct plugin *plugin){ printf(\u0026#34;Hello world!\u0026#34;); return 0; }   Makefile\n# 변경전 PLUGIN_OBJS := \\  plugins/intel/intel-nvme.o \\  plugins/lnvm/lnvm-nvme.o \\  plugins/memblaze/memblaze-nvme.o \\  plugins/wdc/wdc-nvme.o \\  plugins/wdc/wdc-utils.o \\  plugins/huawei/huawei-nvme.o \\  plugins/netapp/netapp-nvme.o \\  plugins/toshiba/toshiba-nvme.o \\  plugins/micron/micron-nvme.o \\  plugins/seagate/seagate-nvme.o \\  plugins/virtium/virtium-nvme.o \\  plugins/shannon/shannon-nvme.o \\  plugins/dera/dera-nvme.o # 변경후 PLUGIN_OBJS := \\  plugins/intel/intel-nvme.o \\  plugins/lnvm/lnvm-nvme.o \\  plugins/memblaze/memblaze-nvme.o \\  plugins/wdc/wdc-nvme.o \\  plugins/wdc/wdc-utils.o \\  plugins/huawei/huawei-nvme.o \\  plugins/netapp/netapp-nvme.o \\  plugins/toshiba/toshiba-nvme.o \\  plugins/micron/micron-nvme.o \\  plugins/seagate/seagate-nvme.o \\  plugins/virtium/virtium-nvme.o \\  plugins/shannon/shannon-nvme.o \\  plugins/dera/dera-nvme.o \\  plugins/todd/todd-nvme.o   컴파일/설치/실행\npwd /root/nvme-cli # run on root permission state! make clean make make install # run  /usr/sbin/nvme nvme todd list   "
},
{
	"uri": "https://cybertramp.net/categories/installation/",
	"title": "installation",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20210822_005/",
	"title": "Installation - ElasticSearch",
	"tags": null,
	"description": "",
	"content": " 주의   service로 동작하므로 wsl에서 테스트 불가\n  참고  https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-20-04    $ curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add - $ echo \u0026#34;deb https://artifacts.elastic.co/packages/7.x/apt stable main\u0026#34; | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list $ sudo apt update $ sudo apt install elasticsearch $ sudo vi /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml\n# ---------------------------------- Network -----------------------------------## Set the bind address to a specific IP (IPv4 or IPv6):#network.host:localhost$ sudo systemctl start elasticsearch $ sudo systemctl enable elasticsearch   Request Test\n$ curl -X GET \u0026#34;localhost:9200\u0026#34; [Pasted image 20210527112333.png]]   Install Kibana  $ sudo apt install nginx $ sudo apt install kibana $ sudo systemctl enable kibana $ sudo systemctl start kibana $ echo \u0026#34;kibanaadmin:`openssl passwd -apr1`\u0026#34; | sudo tee -a /etc/nginx/htpasswd.users $ sudo vi /etc/nginx/sites-available/{SERVER_NAME}   localhost 이외에서 접근 허용\n/etc/kibana/kibana.yml\nserver.host:\u0026#34;0.0.0.0\u0026#34;elasticsearch.hosts:\\[\u0026#34;http://localhost:9200\u0026#34;\\]   /etc/nginx/sites-available/{SERVER_NAME}\nserver { listen 5601; server_name your_domain; auth_basic \u0026#34;Restricted Access\u0026#34;; auth_basic_user_file /etc/nginx/htpasswd.users; location / { proxy_pass http://localhost:5601; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026#39;upgrade\u0026#39;; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; } } $ sudo ln -s /etc/nginx/sites-available/{SERVER_NAME} /etc/nginx/sites-enabled/{SERVER_NAME} $ sudo nginx -t $ sudo systemctl start nginx $ sudo systemctl enable nginx $ sudo systemctl reload nginx Install Logstash  $ sudo apt install logstash $ sudo vi /etc/logstash/conf.d/logstash.conf /etc/logstash/conf.d/logstash.conf\ninput { file { path =\u0026gt; [ \u0026#34;/FADU-FTP/TESTLOGS/*.*\u0026#34; ] start_position =\u0026gt; \u0026#34;beginning\u0026#34; sincedb_path =\u0026gt; \u0026#34;/dev/null\u0026#34; } } filter { grok { match =\u0026gt; {\u0026#34;path\u0026#34; =\u0026gt; \u0026#34;%{GREEDYDATA:lotid}_ST470_%{GREEDYDATA:tester}-%{GREEDYDATA:dut}_%{GREEDYDATA:testtime}.txt\u0026#34;} } } output { elasticsearch { hosts =\u0026gt; [\u0026#34;localhost:9200\u0026#34;] } } # configure test $ sudo -u logstash /usr/share/logstash/bin/logstash --path.settings /etc/logstash -t "
},
{
	"uri": "https://cybertramp.net/posts/20210822_004/",
	"title": "Installation - gitea(docker)",
	"tags": null,
	"description": "",
	"content": "참고\n https://docs.docker.com/compose/install/ https://docs.gitea.io/en-us/install-with-docker/  apt install docker docker.io -y sudo curl -L \u0026#34;[https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)](https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname%20-s)-$(uname%20-m))\u0026#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose mkdir dockers cd dockers vi docker-compose.yml docker-compose.yml\nversion:\u0026#34;2\u0026#34;networks:gitea:external:falseservices:server:image:gitea/gitea:latestenvironment:- USER\\_UID=1000- USER\\_GID=1000restart:alwaysnetworks:- giteavolumes:- ./gitea:/data- /etc/timezone:/etc/timezone:ro- /etc/localtime:/etc/localtime:roports:- \u0026#34;3000:3000\u0026#34;- \u0026#34;2222:22\u0026#34;docker-compose up docker-compose start "
},
{
	"uri": "https://cybertramp.net/posts/20210822_002/",
	"title": "Installation - Mongo DB",
	"tags": null,
	"description": "",
	"content": "참고\n1. 키 추가 wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add - 2. 레포지토리 추가 echo \u0026#34;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse\u0026#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list 3. 패키지 최신화 및 설치 sudo apt update sudo apt-get install -y mongodb-org 4. 서비스 시작 service mongod start service mongod enable service mongod status 5. 관리자 계정 생성 MongoDB CLI를 통해 인증을 위한 관리자 계정을 생성한다.\nmongo\nuse admin db.createUser( { user: \u0026#34;원하는 계정 이름\u0026#34;, pwd: \u0026#34;패스워드\u0026#34;, roles: [\u0026#39;root\u0026#39;] } ) 6. MongoDB 바인딩 설정 및 관리자 계정 설정 기본적으로 처음에 127.0.0.1로 바인딩 되게 설정되어 있으므로 수정해주어야 외부에서 접근이 가능하다. 또한 MongoDB는 기존 Mysql or MariaDB와 달리 설치시 계정을 설정하지 않는다. 따라서 보안을 위해 따로 설정을 해주어야한다.\n/etc/mongod.conf\n# network interfaces net: port: 27017 bindIp: 0.0.0.0 # Authentication security: authorization: enabled 7. 접속 확인 세가지 방법이 가능하다. 커맨드를 통해 or 쉘에 들어가있는 상태 or ORM을 통한 접속 확인\n  커맨드\nmongo -u \u0026#34;admin\u0026#34; -p --authenticationDatabase \u0026#34;admin\u0026#34;   쉘\nuse admin db.auth(\u0026#34;계정\u0026#34;, \u0026#34;암호\u0026#34; )   Mongoose\nmongoose.connect(\u0026#39;mongodb://계정:암호@호스트:포트/admin\u0026#39;, { dbName: \u0026#39;사용할 데이터베이스\u0026#39; });    몽고 DB는 실제로도 DB에 계정을 설정안해 암호화 당하고 비트코인 요구를 당한 적이 있으니 필이 계정을 설정하여 접근하는 것이좋다.\n "
},
{
	"uri": "https://cybertramp.net/categories/js/",
	"title": "js",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20220220_001/",
	"title": "신기한 게임 Vampire Survivors",
	"tags": null,
	"description": "",
	"content": "최근에 Vampire Survivors 라는 게임이 Hot 하다고 들었다. 하지만 그냥 인디 게임이라 생각이 들어 지나치고 있었다. 그러다가 유튜브 알고리즘에 보여 내 눈에 들어오게 되었고 저렴한 금액에 구입을 하였고 게임을 해봤다.\n게임에 대한 조그만한 이야기.. 게임은 로그라이크 형식의 게임인데, 바인딩 오브 아이작이라는 게임과 비슷하다. 적들이 사방에서 계속 Gen되며, 자동으로 나가는 공격으로 방향키만 조작하여 적들을 죽인다.\n죽인 적에서는 경험치가 나오고 그 경험치를 먹고 레벨업을 하게되면 내가 원하는 무기트리와 버프 트리를 선택할 수 있다. 그러면 그 무기와 버프를 적절히 잘 선택해서 30분을 살아 남는 게임이다.\n글만 보면 이게 왜 인기 있지라는 생각이 들지만 매우 쉽고 저렴한데 나쁘지 않은 퀄리티를 가지고 있어서 그런 것 같다.\nThe Binding of Issac 은 5500원인 걸 생각하면 매우 괜찮다.. 나는 깨야겠다고 맘을 먹으면 왠만하면 될때 까지해서.. 여차 저차 첫번째, 두번째 맵을 클리어 했다. 세번째 맵은 29분 1X초에서 2번이나 죽어서 게임을 껐다\u0026hellip;\n이 게임이 JS로 만들었다고??? 여튼 게임을 플레이하고 회사에 출근했더니 메일 하나가 왔다. 노마드 코더를 가입해둬서 가끔 오는데\u0026hellip; Vampire Survivors 이야기가 있더라..\n\u0026lt;메일 내용\u0026gt;\n IT 최신 소식 줍줍  🎮 인터넷에서 난리 난 뱀파이어 서바이버 Steam 게임이 JS로만 만들었다는 놀라운 사실! 이 겜으로 30억 벌었다는 소문이\u0026hellip; 게임 제작한 개발자 Luca Galante의 인터뷰 보기    헉\u0026hellip; 이라는 생각이 순간 스쳤다.. \u0026lsquo;최근에 Python으로 만든 게임들이 있다는 이야기는 많이 들었지만.. JS로 만들었다니..\u0026rsquo;'\n\u0026lsquo;분명 2D래도.. 이렇게 많은 몬스터 오브젝트와 경험치 오브젝트에 랙도 안걸리던데\u0026hellip;\u0026rsquo; 라는 생각\u0026hellip;\n그러고 잊고 있다가 주말이되서 다시 한 번 이 게임을 살펴봤다..\nJS로 만들었다면 분명 게임 디렉토리에 v8 engine 관련한 것들이 있을 것 같았다.\n /img/img1.png 와.. 정말 v8이 적힌 파일들이 있었고 chromium 라이센스 문서가 있었다. 좀 더 찾아보니 webpack도 있고.. 신기하더라..\n /images/20220220_001/img2.png 아마 electron과 html5를 이용해서 만들었겠구나.. 라는 생각까지는 했고 분명 어떤 라이브러리가 있을 것 같아 찾아보다가 ..\n게임의 credits에서 다음 라이브러리를 사용했다고 적혀 있는 걸 찾았다.\n /images/20220220_001/img3.png 사용된 기술 스택\n [Phaser 3](Welcome to Phaser 3 - Phaser3 - Phaser)  Python의 RenPy 같은 JS용 게임 프레임워크이다\u0026hellip; 난 이런게 나온지 처음 알았다.. 근데 벌써 버전 3\u0026hellip; 몇 년전 기말고사로 제출 했던 내가 만든 HTML5 펭귄 게임이 떠오른다\u0026hellip; 허접한 \u0026hellip;   [RexPlugins](Notes of Phaser 3 (rexrainbow.github.io))  Phaser 3 관련하여 플러그인을 연결 해주는 라이브러리 같다.   [Electron](Notes of Phaser 3 (rexrainbow.github.io))  JS로 만들었다고 한 거보고 electron을 사용했을 것 같았다. 웹 브라우저 모양에서 돌아가는게 아니니깐..   [JuiceFX](Juice FX by CodeManu (itch.io))  이건 effect 주는 assets 인 듯 했다.    \u0026lsquo;그럼 electron을 쓴다면 웹에서도 돌아가겠네???\u0026rsquo;\n그렇다.. 웹 링크\n /images/20220220_001/img4.png 콘솔에서는 Phaser를 사용하고 있다고 뜬다!\n결론 이제는 JS로도 게임을 만들고 스팀에 올라가 판매가 되고 윈도우, 리눅스, 맥에서 나름 native하게 돌아간다..\n이제는 게임을 만들때 어떤 특정 언어에 구애 받지 않는 것 같다.. 물론 매우 높은 퀄리티의 게임과 같은 것들은 여전히 C++이 가장 뛰어 나겠지만..\n누구든 자기가 개발하고 있는 언어로 게임을 만들고자 하는 열정과 아이디어만 떠오른다면 시도해 볼만한 것 같다!\n"
},
{
	"uri": "https://cybertramp.net/categories/python3/",
	"title": "python3",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20200903_001/",
	"title": "zip file permission",
	"tags": null,
	"description": "",
	"content": "원래 tar는 permission을 그대로 가지고 묶고 zip은 permission을 포함하지 않고 압축을 했음.\n하지만 info-ZIP 3.0 부터 file/dirs UNIX permission과 UID/GID 소유권을 포함 할 수 있게 되었음. unix와 Windows NT에서는 보존하여 압축, 압축 해제 가능하나 Windows에서는 불가능함.\n unzip의 관련 내용\nhttps://unix.stackexchange.com/questions/313656/preserving-permissions-while-zipping\nDates, times and permissions of stored directories are not restored\rexcept under Unix. (On Windows NT and successors, timestamps are now\rrestored.)\r   permission 포함 압축 및 해제 옵션은 없어도 기본 적용\n root에서 진행하기를 권장함\n추가로 SUID/SGID/Sticky bits 까지 복원하려면 -K 옵션 사용\n zip xxxx.zip {files} unzip xxxx.zip -d {Target Dir}   "
},
{
	"uri": "https://cybertramp.net/categories/cpp/",
	"title": "cpp",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://cybertramp.net/posts/20200901_001/",
	"title": "QT Framework",
	"tags": null,
	"description": "",
	"content": "Qt Qt는 GUI 프로그램 개발에 널리 쓰이는 크로스 플랫폼 프레임워크. Qt는 한번쓰고 여러 플랫폼용으로 컴파일하는것을 메인으로 개발된 프레임워크이다.\n  현재 버전\n2020년 9월 기준 Qt 5.15와 Qt 4.11.1이 최신\n  License\n두가지 라이센스 방식이 존재\n  Commercial License\n외부에 코드를 공개하지 않고도 독점적인 SW 개발 가능\n연간 구독요금이 $3950, UI 빌더 툴 별도(추가 연간 $999)\n  GNU LGPL 버전 2.1\nQt 5.6(2016.03 Released) 까지까지 해당 라이센스였음\n이후 버전 부터는 LGPL 3.0 -\u0026gt; 라이브러리 범위 소스코드 공개해야함(전체 코드는 아님)\n참고\n    언어\n C++, QML 언어 사용    사용 IDE\n Qt Creator 4.0.3    1. 기본구조   기본 프로젝트 생성\ngit을 사용하는 조건으로 Qt 5.6 버전으로 프로젝트를 생성하는 과정이다.\n  기본 생성 파일\n기본적으로 프로젝트를 생성하면 다음의 파일들이 생성된다.\n  test2.pro\n프로젝트 파일\n  deployment/deployment.pri\n위의 *.pro 파일과 완전히 동일하며 Qt Project Include 파일이라고함. 공통적으로 필요한 환경을 이 파일에 설정하고 *.pro 파일에 include 하여 사용\n  Sources/main.cpp\n메인이 되는 cpp 파일\n  Resources/qml.qrc\n  main.qml\n말그대로 기본 생성되는 window의 qml 파일\nSources/main.cpp 에서 해당 파일을 로드함\n  MainForm.ui.qml\n이건 GUI 폼 파일인것 같은데 Dennis가 추천하지 않는 방식이라고함\n따라서 이건 지우고 해도 무방. main.qml에서 이 파일을 불러오는데 그 부분을 제거하면된다.\n /img/image-20201021110001635.png       2. 기본 버튼및 이벤트 버튼을 추가하고 그에 따른 이벤트를 실행시켜 본다.\n  1번 방법\n이 방법은 slots을 사용하는 방법이다. 난 이 예제를 처음 봤기에 이걸 붙여 보았고 잘 동작한다.\nHeaders/globalobject.h\n#ifndef GLOBALOBJECT_H #define GLOBALOBJECT_H  #include \u0026lt;QObject\u0026gt; class GlobalObject : public QObject{ Q_OBJECT public: GlobalObject(); public slots: void doSomething(const QString \u0026amp;text); }; #endif // GLOBALOBJECT_H Sources/globalobject.cpp\n#include \u0026#34;globalobject.h\u0026#34;#include \u0026lt;QDebug\u0026gt; GlobalObject::GlobalObject() { // perform custom initialization steps here } void GlobalObject::doSomething(const QString \u0026amp;text) { qDebug() \u0026lt;\u0026lt; \u0026#34;GlobalObject doSomething called with\u0026#34; \u0026lt;\u0026lt; text; } Sources/main.cpp\n#include \u0026lt;QGuiApplication\u0026gt;#include \u0026lt;QQmlApplicationEngine\u0026gt;#include \u0026lt;QObject\u0026gt;#include \u0026lt;QQmlContext\u0026gt;#include \u0026#34;globalobject.h\u0026#34; int main(int argc, char *argv[]) { QGuiApplication app(argc, argv); QQmlApplicationEngine engine; GlobalObject* globalObj = new GlobalObject(); globalObj-\u0026gt;doSomething(\u0026#34;TEXT FROM C++\u0026#34;); engine.rootContext()-\u0026gt;setContextProperty(\u0026#34;globalobject\u0026#34;, globalObj); engine.load(QUrl(QStringLiteral(\u0026#34;qrc:/main.qml\u0026#34;))); return app.exec(); } Resources/qml.qrc/main.qml\nimport QtQuick 2.6 import QtQuick.Window 2.2 Window { visible: true width: 640 height: 480 title: qsTr(\u0026#34;Test\u0026#34;) Rectangle { id: button width: 100 height: 30 color: \u0026#34;red\u0026#34; radius: 5 anchors.centerIn: parent Text { id: \u0026#34;buttonText\u0026#34; text: qsTr(\u0026#34;Button\u0026#34;) color: \u0026#34;white\u0026#34; anchors.centerIn: parent } MouseArea{ anchors.fill: parent onClicked: globalobject.doSomething(\u0026#34;Pushed\u0026#34;) } } } 위 예제는 버튼을 누르면 콘솔 창에 Pushed 라는 텍스트가 출력되는 단순한 예제이다. 예제 2개를 합친것이라서 조금 이상하다.\n  동작은 정상적으로 된다.\n  2번 방법\nDennis가 추천해준 예제에서 가져온 방법이다.\nQ_PROPERTY 매크로 : QML Element 의 Property를 C++과 통신을 위한 기능\nQ_INVOKABLE : QML 에서 C++ 함수를 호출하는 방법\n  "
},
{
	"uri": "https://cybertramp.net/posts/20191121_001/",
	"title": "Windows Terminal에서 시작 디렉토리 지정하기",
	"tags": null,
	"description": "",
	"content": "Windows Terminal을 설치하고 실행하면 경로가 윈도우의 홈 디렉토리로 시작하게 된다. 작업하는데 매번 해당 경로를 타고 다시 이동해야하는 번거로움을 줄이기 위해 설정한다.\n  기존 예제\n기존에는 \u0026quot;startingDirectory\u0026quot; 속성이 없어서 터미널 실행시 아래와 같은 위치로 시작한다.\n[설정된 속성]\n{ \u0026#34;guid\u0026#34;: \u0026#34;{c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40}\u0026#34;, \u0026#34;hidden\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Ubuntu-18.04\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;Windows.Terminal.Wsl\u0026#34; }, [터미널 시작시]\nparan_son@pandorica:/mnt/c/Users/paran_son$   위치를 WSL 내 사용자 홈 디렉토리로 변경\n 여기서 home 디렉토리 아래 사용자명은 WSL 내 사용자 명으로 설정해주어야 한다.\n \u0026lt;수정된 속성\u0026gt;\n{ \u0026#34;guid\u0026#34;: \u0026#34;{c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40}\u0026#34;, \u0026#34;hidden\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Ubuntu-18.04\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;Windows.Terminal.Wsl\u0026#34;, \u0026#34;startingDirectory\u0026#34;: \u0026#34;\\\\\\\\wsl$\\\\Ubuntu-18.04\\\\home\\\\paran_son\u0026#34; }, \u0026lt;터미널 시작시\u0026gt;\ngreendot@pandorica:~$   위치를 c 드라이브 내 특정 디렉토리로 변경\n여기서는 c드라이브 내 working 디렉토리를 시작 위치로 지정한다.\n\u0026lt;수정된 속성\u0026gt;\n{ \u0026#34;guid\u0026#34;: \u0026#34;{c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40}\u0026#34;, \u0026#34;hidden\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Ubuntu-18.04\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;Windows.Terminal.Wsl\u0026#34;, \u0026#34;startingDirectory\u0026#34;: \u0026#34;../../working\u0026#34; }, \u0026lt;터미널 시작시\u0026gt;\ngreendot@pandorica:/mnt/c/working$   "
},
{
	"uri": "https://cybertramp.net/posts/20191028_001/",
	"title": "Dlib 설치 \u0026 연동",
	"tags": null,
	"description": "",
	"content": "[1] Dlib 설치 사전 상태  opencv4 버전, Visual Studio community 2019가 설치되어 있음\n 1. dlib 다운 공식페이지에서 다운로드 받고 압축풀기\n2. Cmake 다운 \u0026amp; 실행 공식페이지에서 Bianry로 다운로드\ncmake-3.16.0-win64-x64\\bin에서 cmake-gui.exe실행\n 내가 다운로드 받은 것은 x64용이다.\n   소스코드 경로 잡아주기\n  바이너리 빌드 위치 잡아주기\n  Configure 클릭\n  VIsual Studio 버전과 x64선택\n  먼저 에러가 빨갛게 에러가 나겠지만 OpenCV 경로 지정이 잘못되서 그럴것이다.\n OpenCD_DIR 경로 설정을 해주면 된다. opencv 경로는 C:/opencv/build\n  아래의 옵션 체크\n- DLIB_JPEG_SUPPORT\n- DLIB_PNG_SUPPORT\n- USE_AVX_INSTRUCTIONS\n- USE_SSE2_INSTRUCTIONS\n- USE_SSE4_INSTRUCTIONS\n  Configure 클릭\n  Generating done 뜨면 끝\n  3. 빌드 dlib-19.18\\dlib\\dlib_build\\dlib.sln 실행\n  빌드 -\u0026gt; 구성 관리자\n  빌드 모든 체크\n  닫고 빌드-솔루션 빌드\n 시간이 좀 걸려요 ㅠ\n   [2] Dlib 연동 사전 상태  먼저 빈 프로젝트가 생성되어 있으며, opencv4는 이미 연동 해놓은 상태이다.\n   프로젝트 - \u0026lt;프로젝트명\u0026gt; 속성\n  구성 속성 - VC++ 디렉터리 - 라이브러리 디렉터리 - 편집\n  C:\\dlib-19.18\\dlib\\dlib_build\\Debug 경로 추가\n 빌드 되었던 라이브러리 파일을 참조하기 위함\n   링커 - 입력 - 추가 종속성에서 dlib.lib 입력\n 나는 dlib.lib 파일명이 좀 이상하게 생성되었다.\ndlib-19.18\\dlib\\dlib_build\\Debug 에 있는 lib 명을 입력할 것\n   "
},
{
	"uri": "https://cybertramp.net/posts/20191027_001/",
	"title": "PowerPC64 환경에서 CentOS7",
	"tags": null,
	"description": "",
	"content": "Ubuntu 환경 위에서 qemu-system-ppc를 통해 CentOS 7을 실행한다.\n 하루를 삽질했다\u0026hellip;ㅠ\n 1. 설치 1) CentOS7 minimal 다운로드 ppc 아키텍쳐 버전의 CentOS7은 다음 사이트에서 다운 받는다.\nhttp://isoredirect.centos.org/altarch/7/isos/ppc64/\n원하는 미러 사이트에서 CentOS-7-ppc64-Minimal-1908.iso을 내려 받으면된다.\n 나는 http://mirror.xtom.com.hk/centos-altarch/7.7.1908/isos/ppc64/ 이 미러에서 받았다. 가장 빨랐다.\n 2) qemu 설치   qemu 설치\nsudo apt install qemu-kvm qemu virt-manager virt-viewer libvirt-bin -y   ppc용 설치\nsudo apt install qemu-system-ppc openbios-ppc -y   3) 브릿지 설정   설치\nsudo apt install bridge-utils uml-utilities -y   브릿지 설정\n브릿지 할 인터페이스는 enp3s0를 기준으로 함\n# 브릿지 br0 인터페이스 생성 sudo brctl addbr br0 # enp3s0의 IP 클리어 sudo ip addr flush dev enp3s0 # br0를 enp3s0와 브릿지 sudo brctl addif br0 enp3s0 # tap 인터페이스 생성 sudo tunctl -t tap0 -u `whoami` # br0를 tap0와 브릿지 sudo brctl addif br0 tap0   인터페이스 활성화\nifconfig enp3s0 up ifconfig tap0 up ifconfig br0 up   브릿지 확인 및 br0에 ip 할당\nbrctl show \u0026amp;\u0026amp; sudo dhclient -v br0   4) 가상 디스크 생성 가상 디스크를 생성한다. qcow2 방식의 20G로 생성한다.\nqemu-img create -f qcow2 powerpc32.img 20G 5) VNC 클라이언트 설치 윈도우의 경우 TigerVNC를 사용하고 우분투인 경우 아래와 같이 설치한다.\nRemmina는 기본적으로 ssh, vnc, rdp를 지원하는 원격 접속 클라이언트이다.\nsudo apt install remmina -y 6) 에뮬레이터 실행 여러 가지 옵션으로 진행했기에 입맛에 맞춰 진행해야한다.\n[진행]   가상 디스크에 OS 설치 전\nsudo qemu-system-ppc64 \\ -m 1024 \\ -boot d \\ -hda powerpc32.img \\ -netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no -device -cdrom CentOS-7-ppc64-Minimal-1908.iso \\ -vnc 0.0.0.0:5 \\ -usbdevice tablet   가상 디스크에 OS 설치 후\nOS 설치가 완료됬기 때문에 CD를 빼는 것 처럼 두 개의 옵션을 제거 한다. -boot, -cdrom\nsudo qemu-system-ppc64 \\ -m 1024 \\ -hda powerpc32.img \\ -netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no -device e1000,netdev=mynet0,mac=52:54:00:fa:ce:11 \\  -vnc 0.0.0.0:5 \\  -usbdevice tablet   [옵션] 옵션이 너무나도 많기에 옵션을 정리해둔다.\n-m 1024: 메모리 1024MB 할당, 최대 2047MB\n-hda powerpc32.img: 특정 가상 디스크 파일을 가상 드라이브로 설정\n-boot d: CD-ROM을 우선 부팅(c 인 경우 첫번째 가상 드라이브 우선 부팅)\n-netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no -device : 가상 네트워크 케이블(TAP)를 통해 QEMU 게스트 OS와 연결, 호스트에서는 브릿지된 tap0가 먼저 설정되어야 함\n-vnc 0.0.0.0:5: 게스트 OS의 화면을 VNC로 중계, 0.0.0.0:5은 모든 네트워크로 포트 5번을 의미. 만약 127.0.0.1이라면 QEMU를 실행중인 호스트OS만 접근이 가능\n-usbdevice tablet: 이중 커서 문제를 해결하기 위함, 이 옵션을 지정하지 않으면 VNC 연결시 호스트 OS 커서와 게스트 OS 커서 두 개가 생김\n 참고\nqemu 설치: https://www.unixmen.com/how-to-install-and-configure-qemu-in-ubuntu/\n네트워크 관련: https://gist.github.com/nstarke/c6593da117c459c18c255395211fa311\n네트워크 관련: https://www.linux-kvm.org/page/Networking\nppc 구동 관련: https://gmplib.org/~tege/qemu.html\nvirt-manager 관련: https://moriskim.wordpress.com/2014/02/24/virtio_with_kvm/\n커널, initrd 관련: https://gist.github.com/nstarke/c6593da117c459c18c255395211fa311\nqemu 옵션들: https://wiki.gentoo.org/wiki/QEMU/Options#Boot_order\n "
},
{
	"uri": "https://cybertramp.net/tags/",
	"title": "Tags",
	"tags": null,
	"description": "",
	"content": ""
}]
