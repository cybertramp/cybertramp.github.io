<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Inkblotty</title>
    <link>https://cybertramp.net/</link>
    <description>Recent content on Inkblotty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 17 May 2020 16:39:37 +0900</lastBuildDate>
    
	<atom:link href="https://cybertramp.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NVMe-cli 설치 및 플러그인 추가</title>
      <link>https://cybertramp.net/posts/0004/</link>
      <pubDate>Mon, 15 Jun 2020 20:45:15 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0004/</guid>
      <description>1. 클론/컴파일/설치 git clone https://github.com/linux-nvme/nvme-cli.git cd nvme-cli make make install # RUN nvme --version 2. 커스텀 플러그인 추가 플러그인은 todd라는 명으로 추가한다. mkdir -p plugins/todd plugins/todd/todd-nvme.h #undef CMD_INC_FILE #define CMD_INC_FILE plugins/todd/todd-nvme #if !defined(TODD_NVME) || defined(CMD_HEADER_MULTI_READ) #define TODD_NVME #include &amp;#34;cmd.h&amp;#34;#include &amp;lt;stdio.h&amp;gt; PLUGIN(NAME(&amp;#34;todd&amp;#34;, &amp;#34;Todd plugin&amp;#34;), COMMAND_LIST( ENTRY(&amp;#34;list&amp;#34;,&amp;#34;List available FADU devices&amp;#34;,todd_list) ) ); #endif #include &amp;#34;define_cmd.h&amp;#34; plugins/todd/todd-nvme.c #include &amp;#34;nvme.h&amp;#34; #define CREATE_CMD #include &amp;#34;todd-nvme.h&amp;#34; static int todd_list(int argc, char **argv, struct command *cmd, struct plugin *plugin){ printf(&amp;#34;Hello world!&amp;#34;); return 0; } Makefile # 변경전 PLUGIN_OBJS := \ plugins/intel/intel-nvme.o \ plugins/lnvm/lnvm-nvme.o \ plugins/memblaze/memblaze-nvme.o \ plugins/wdc/wdc-nvme.o \ plugins/wdc/wdc-utils.o \ plugins/huawei/huawei-nvme.o \ plugins/netapp/netapp-nvme.o \ plugins/toshiba/toshiba-nvme.o \ plugins/micron/micron-nvme.o \ plugins/seagate/seagate-nvme.o \ plugins/virtium/virtium-nvme.o \ plugins/shannon/shannon-nvme.o \ plugins/dera/dera-nvme.o # 변경후 PLUGIN_OBJS := \ plugins/intel/intel-nvme.o \ plugins/lnvm/lnvm-nvme.o \</description>
    </item>
    
    <item>
      <title>Django 설치</title>
      <link>https://cybertramp.net/posts/0001/</link>
      <pubDate>Mon, 15 Jun 2020 20:44:52 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0001/</guid>
      <description>Django 1. Installation (1) venv 설치 개발 환경을 깔끔하게 관리하기 위한 도구 mkdir v1 cd v1 sudo apt install python3-venv -y python3 -m venv v1 # 개발환경 적용 source v1/bin/activate (2) Django 설치 python3 -m pip install --upgrade pip pip install django~=2.0.0 mkdir project1 django-admin startproject mysite . 다음과 같은 구조로 파일이 생성됨 생성된 구조 . ├── manage.py └── mysite ├── __init__.py ├── __pycache__ │ ├── __init__.cpython-36.pyc │ └── settings.cpython-36.pyc ├── settings.py ├── urls.py └── wsgi.py 2 directories, 7 files (3) 설정 변경 타임존/정적파일 위치 변경 기존 것을 변경</description>
    </item>
    
    <item>
      <title>MongoDB 설치 및 사용</title>
      <link>https://cybertramp.net/posts/0002/</link>
      <pubDate>Mon, 15 Jun 2020 00:12:30 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0002/</guid>
      <description>참고 1. 키 추가 wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add - 2. 레포지토리 추가 echo &amp;#34;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse&amp;#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list 3. 패키지 최신화 및 설치 sudo apt update sudo apt-get install -y mongodb-org 4. 서비스 시작 service mongod start service mongod enable service mongod status 5. 관리자 계정 생성 MongoDB CLI를 통해 인증을 위한 관리자 계정을 생성한다. mongo use admin db.createUser( { user: &amp;#34;원하는 계정 이름&amp;#34;, pwd: &amp;#34;패스워드&amp;#34;, roles: [&amp;#39;root&amp;#39;] } ) 6. MongoDB 바인딩 설정</description>
    </item>
    
    <item>
      <title>특수 문자 ^M 처리하기</title>
      <link>https://cybertramp.net/posts/0005/</link>
      <pubDate>Tue, 09 Jun 2020 00:05:21 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0005/</guid>
      <description>이 문제가 왜 발생했는지는 모르겠다. 그냥 갑자기 발생했다. visual studio code에서 특정 폴더를 열고 파일의 행을 복사해서 사용하던 도중 발생한 문제였다. 윈도우에서 편집시 개행문자가 붙어서 저장되는데 이를 Unix기반에서 읽는 경우 발생하는 문제라고한다. 분명 또 다시 찾을 내 자신을 걱정하며 기록해둔다. 1번 방법: vi 이건 vi 에서 해당 문자를 제거하</description>
    </item>
    
    <item>
      <title>다시 시작하는 블로그</title>
      <link>https://cybertramp.net/posts/0003/</link>
      <pubDate>Sun, 17 May 2020 17:11:27 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0003/</guid>
      <description>1년이나 지나서야 다시 블로그를 시작하려고한다. 너무 많은 일들과 시간이 지나가 버렸지만.. 제대로 다시 한번 정보도 기록하고 공유하면서 사용하려고한다. 아마 큰 이유는 맥북이 생겼기 때문인것 같다. 맥북 이야기 직장을 다닌지 어느덧 5개월이 다되어가는데 내 자신에게는 아무런 선물을 하지 않고 있었다. 그러던 중 내 자신이 굉장히 불편하게 한성 노트</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cybertramp.net/about/</link>
      <pubDate>Sun, 17 May 2020 16:39:37 +0900</pubDate>
      
      <guid>https://cybertramp.net/about/</guid>
      <description>Hi! I&amp;rsquo;m Cybertramp.
I live in Korea, of course South Korea. I recently started working for FADU. Previously, I studied at Sang-Myung university.
I like anything computer related. For instance, IoT, a lot of Linux distro, building PC, building NAS, Docker, Block chain&amp;hellip;. etc..
My certifications are PC master, Linux master, Network Manager, Redhat RHCSA, ITQ. If possible, I try to get Redhat RHCE this year. XD</description>
    </item>
    
    <item>
      <title>나의 프로젝트들..</title>
      <link>https://cybertramp.net/projects/</link>
      <pubDate>Sun, 17 May 2020 16:39:37 +0900</pubDate>
      
      <guid>https://cybertramp.net/projects/</guid>
      <description>Below is the project I did. Penguin Adventure - 2019 Witab - 2019 OpenSSL with c - 2019 FaceSwap with OpenCV4 - 2019 QBQB-RabbitMQ - 2018 tensorflow-box - 2018 File Shooter - 2018 MATLAB-BiorythmGUI - 2018</description>
    </item>
    
    <item>
      <title>Windows Terminal에서 시작 디렉토리 지정하기</title>
      <link>https://cybertramp.net/posts/0006/</link>
      <pubDate>Sat, 23 Nov 2019 00:01:00 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/0006/</guid>
      <description>Windows Terminal을 설치하고 실행하면 경로가 윈도우의 홈 디렉토리로 시작하게 된다. 작업하는데 매번 해당 경로를 타고 다시 이동해야하는 번거로움을 줄이기 위해 설정한다. 기존 예제 기존에는 &amp;quot;startingDirectory&amp;quot; 속성이 없어서 터미널 실행시 아래와 같은 위치로 시작한다. [설정된 속성] { &amp;#34;guid&amp;#34;: &amp;#34;{c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40}&amp;#34;, &amp;#34;hidden&amp;#34;: false, &amp;#34;name&amp;#34;: &amp;#34;Ubuntu-18.04&amp;#34;, &amp;#34;source&amp;#34;: &amp;#34;Windows.Terminal.Wsl&amp;#34; }, [터미널 시작시] paran_son@pandorica:/mnt/c/Users/paran_son$ 위치를 WSL 내 사용자 홈 디렉토리로 변</description>
    </item>
    
    <item>
      <title>Dlib 설치</title>
      <link>https://cybertramp.net/posts/dlib/</link>
      <pubDate>Mon, 28 Oct 2019 00:05:00 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/dlib/</guid>
      <description>Dlib 설치 &amp;amp; 연동 [1] Dlib 설치 사전 상태 opencv4 버전, Visual Studio community 2019가 설치되어 있음 1. dlib 다운 공식페이지에서 다운로드 받고 압축풀기 2. Cmake 다운 &amp;amp; 실행 공식페이지에서 Bianry로 다운로드 cmake-3.16.0-win64-x64\bin에서 cmake-gui.exe실행 내가 다운로드 받은 것은 x64용이다. 소스코드 경로 잡아주기 바이</description>
    </item>
    
    <item>
      <title>PowerPC64 환경에서 CentOS7</title>
      <link>https://cybertramp.net/posts/powerppc/</link>
      <pubDate>Sun, 27 Oct 2019 00:05:00 +0900</pubDate>
      
      <guid>https://cybertramp.net/posts/powerppc/</guid>
      <description>Ubuntu 환경 위에서 qemu-system-ppc를 통해 CentOS 7을 실행한다. 하루를 삽질했다&amp;hellip;ㅠ 1. 설치 1) CentOS7 minimal 다운로드 ppc 아키텍쳐 버전의 CentOS7은 다음 사이트에서 다운 받는다. http://isoredirect.centos.org/altarch/7/isos/ppc64/ 원하는 미러 사이트에서 CentOS-7-ppc64-Minimal-1908.iso을 내려 받으면된다. 나는 http://mirror.xtom.com.hk/centos-altarch/7.7.1908/isos/ppc64/ 이 미러에서 받았다.</description>
    </item>
    
  </channel>
</rss>