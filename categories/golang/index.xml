<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Cybertramp Blog</title>
    <link>https://cybertramp.net/categories/golang/</link>
    <description>Recent content in golang on Cybertramp Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 19 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cybertramp.net/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installation - GoLang</title>
      <link>https://cybertramp.net/posts/20220119_001/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220119_001/</guid>
      <description>Version: 1.17.6을 설치하는 방법이다.
  다운 및 설치
# wget sudo -i mkdir go; cd go wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz exit go version   프로젝트 생성 &amp;amp; 셋업
cd {project dict} go mod init {package name} go mod tidy go build   Compile
GOOS=linux GOARCH=amd64 go build -v xxxx.go GOOS=windows GOARCH=amd64 go build -v xxxx.go   </description>
    </item>
    
    <item>
      <title>Build</title>
      <link>https://cybertramp.net/posts/20220320_003/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220320_003/</guid>
      <description>Go언어의 장점은 현재있는 환경(OS)에서 다른 OS 간의 빌드가 쉽다는 것이다.
Cross Compile Go (Golang) GOOS and GOARCH (github.com)
Build는 다음과 같이 할 수 있다.
GOOS=linux GOARCH=amd64 go build -v xxxx.go GOOS=windows GOARCH=amd64 go build -v xxxx.go </description>
    </item>
    
    <item>
      <title>GoLang에서 import된 다른 소스 코드의 변수 또는 함수 접근</title>
      <link>https://cybertramp.net/posts/20220320_005/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220320_005/</guid>
      <description>Go언어로 작성시 2번 이나 삽질한 내용이다.
참고
Go언어에서 다른 소스코드의 변수/함수를 사용하려면(import 한 상태에서) 무조건 식별자가 대문자로 시작해야 접근이 가능하다.</description>
    </item>
    
    <item>
      <title>Map</title>
      <link>https://cybertramp.net/posts/20220103_005/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220103_005/</guid>
      <description>리스트 형태의 struct 배열 생성 current_status := make([]MsgData, 0) current_status = append(current_status, MsgData{&amp;#34;1&amp;#34;,&amp;#34;2&amp;#34;,false}); </description>
    </item>
    
    <item>
      <title>Powershell에서 Service control</title>
      <link>https://cybertramp.net/posts/20220320_004/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220320_004/</guid>
      <description>Go언어로 Windows Service 프로그램을 만들면서 알게된 내용이다.
서비스 등록 sc.exe create &amp;#34;Go Windows Service&amp;#34; binPath= SERVICE_NAME\SERVICE_NAME.exe sc.exe config SERVICE_NAME start=auto sc.exe description &amp;#34;Go Windows Service&amp;#34; &amp;#34;Go Windows Service Description&amp;#34; sc.exe start &amp;#34;Go Windows Service&amp;#34; 서비스 제거 sc.exe delete SERVICE_NAME GoLang 관련  service로 사용시 fmt 라이브러리 사용하면 service 동작안함 windows 경로시 서비스로 돌기때문에 상대 경로로 넣으면 파일 못 불러옴  </description>
    </item>
    
    <item>
      <title>자주 사용하는 모음</title>
      <link>https://cybertramp.net/posts/20220320_002/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cybertramp.net/posts/20220320_002/</guid>
      <description>시간 스트링 가져오기 import (  &amp;#34;fmt&amp;#34;  &amp;#34;time&amp;#34; )  currentTime := time.Now() fmt.Println(&amp;#34;Current Time in String: &amp;#34;, currentTime.String()) fmt.Println(&amp;#34;YYYY-MM-DD : &amp;#34;, currentTime.Format(&amp;#34;20060102_150405&amp;#34;)) Timer, Ticker Timer는 1회 성으로 사용하는 것, Ticker는 주기적으로 실행하는 경우 사용하는 것이다.
ticker := time.NewTicker(time.Second * 2)  for currentTime := range ticker.C { 	fmt.Println(&amp;#34;Tickered!&amp;#34;) } Windows에서의 File Permission 관련 대부분의 파일 함수 관련 Permission이 Linux용으로 존재.
Windows에서는 다음과 같이 Permission을 설정하여 사용 가능하다.</description>
    </item>
    
  </channel>
</rss>
